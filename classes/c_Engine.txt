class Engine
{
    private List<string> monsterNames = null;
    List<string> armorNames = null;
    List<string> weaponNames = null;
    private Random random = null;


    public Engine(Random random)
    {
        monsterNames = new List<string>
        {
            "Монстр1",
            "Монстр2",
            "Монстр3",
            "Монстр4",
            "Монстр5",
            "Монстр6",
            "Монстр7",
            "Монстр8",
            "Монстр9",
            "Монстр10"
        };

        armorNames = new List<string>
        {
            "Лати",
            "Кольчуга",
            "Кіраса",
            "Шолом",
            "Нагрудник"
        };

        weaponNames = new List<string>
        {
            "Меч",
            "Сокира",
            "Кинджал",
            "Лук",
            "Палиця"
        };

        this.random = random;
    }

    public Monster GenerateMonster(int playerLevel)
    {
        if (playerLevel == 1)
            playerLevel = random.Next(playerLevel, playerLevel + 2);
        else
            playerLevel = random.Next(playerLevel - 1, playerLevel + 2);

        return new Monster(this.random, GetRandomMonsterName(), playerLevel);
    }

    private string GetRandomMonsterName()
    {
        int index = random.Next(monsterNames.Count);
        string name = monsterNames[index];
        monsterNames.RemoveAt(index);
        return name;
    }

    public Player CreatePlayer(string playerName, string playerClass)
    {
        Player player = null;

        switch (playerClass.ToLower())
        {
            case "варвар":

                player = new Barbarian(playerName);
                player.EquipWeapon(new Weapon("Іржава Сокира", 3));
                break;
            case "танк":
                player = new Tank(playerName);
                player.EquipWeapon(new Weapon("Тупий Меч", 2));
                break;
            case "розбишака":
                player = new Rogue(playerName);
                player.EquipWeapon(new Weapon("Отруйне Зубило", 2));
                break;
            default:
                throw new Exception("Такого Класу немає");
        };

        return player;
    }

    public Armor GenerateArmor()
    {
        int defense = random.Next(3, 20);
        int price = random.Next(10, 100);

        if (armorNames.Count == 0)
            throw new Exception("Назви для броні закінчились");

        int index = random.Next(armorNames.Count);
        string name = armorNames[index];
        armorNames.RemoveAt(index);

        return new Armor(name, defense, price);
    }



    public Weapon GenerateWeapon(string name = "", int damage = 0)
    {
        if (name.Length == 0)
        {
            int index = random.Next(weaponNames.Count);
            name = weaponNames[index];
            weaponNames.RemoveAt(index);
        }

        if (damage == 0)
            damage = random.Next(3, 20);

        int price = damage * random.Next(5, 20);

        return new Weapon(name, damage, price); //add ,price
    }

    static class Logger
    {
        static public void showVictoryMessage(int exp)
        {
            Console.WriteLine($"Ви перемогли і отримали {exp} очків досвіду");
        }

        static public void showOnePunchResult(string name, int damage)
        {
            Console.WriteLine($"{name} наніс {damage} шкоди");
        }
    }

    class EventRoom
    {
        private Random random;
        private Engine engine;

        public EventRoom(Random random, Engine engine)
        {
            this.random = random;
            this.engine = engine;
        }

        public void Enter(Player player)
        {
            int eventType = random.Next(1, 4);

            switch (eventType)
            {
                case 1:
                    BattleEvent(player);
                    break;
                case 2:
                    RandomEvent(player);
                    break;
                case 3:
                    EmptyRoomEvent(player);
                    break;
            }
        }

        private void BattleEvent(Player player)
        {
            Console.WriteLine("Ви зустріли монстра!");
            Console.WriteLine("Починаємо бій...");

            new Events(random).battle(player, this.engine.GenerateMonster(player.Level));
        }

        private void RandomEvent(Player player)
        {
            int randomValue = random.Next(1, 4);

            switch (randomValue)
            {
                case 1:
                    Console.WriteLine("Збільшення характеристик гравця!");
                    player.Strength += 5;
                    player.Agility += 5;
                    player.Stamina += 5;
                    break;
                case 2:
                    Console.WriteLine("Зменшення характеристик гравця!");
                    player.Strength -= 5;
                    player.Agility -= 5;
                    player.Stamina -= 5;
                    break;
                case 3:
                    Console.WriteLine("Пастка! Ви зазнали шкоди.");
                    player.damageHealth(10);
                    break;
            }
        }

        private void EmptyRoomEvent(Player player)
        {
            Console.WriteLine("Ця кімната порожня. Нічого цікавого не знайдено.");
        }
    }

    class Events
    {
        Random random = null;

        public Events(Random random)
        {
            this.random = random;
        }

        private int calculateDamage(int damage, int armor)
        {
            if (damage - armor < 0)
                damage = 0;
            else
                damage -= armor;

            return damage;
        }

        public void battle(Player player, Monster monster)
        {
            while (player.Health > 0 && monster.Health > 0)
            {
                Console.Clear();
                player.ShowInfo();
                monster.showInfo();

                Console.WriteLine("===========================");
                Console.ForegroundColor = ConsoleColor.Red;

                int damage = calculateDamage(player.CalculateDamage(), monster.Armor);
                Logger.showOnePunchResult(player.Name, damage);
                monster.damageHealth(damage);

                damage = calculateDamage(monster.Damage, player.CalculateDefense());
                Logger.showOnePunchResult(monster.Name, damage);
                player.damageHealth(damage);

                Console.ResetColor();
                // Console.ReadLine();
                Thread.Sleep(500);
            }

            if (monster.Health == 0)
            {
                Logger.showVictoryMessage(monster.ExperiencePoints);
                player.addedExp(monster.ExperiencePoints);
                player.Money += monster.ExperiencePoints * 10;
            }
            else
            {
                Console.WriteLine("WASTED!!!");
            }
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Console.OutputEncoding = Encoding.UTF8;
            Random random = new Random();
            Engine engine = new Engine(random);
            EventRoom eventRoom = new EventRoom(random, engine);

            Console.Write("Введіть ім'я гравця: ");
            string playerName = Console.ReadLine();

            Console.Write("Виберіть клас гравця (варвар, танк, розбишака): ");
            string playerClass = Console.ReadLine();

            Player player = engine.CreatePlayer(playerName, playerClass);
            if (player == null)
            {
                Console.WriteLine("Не вдалося створити гравця.");
                return;
            }

            player.EquipArmor(engine.GenerateArmor());
            player.EquipWeapon(engine.GenerateWeapon());

            Monster monster = engine.GenerateMonster(player.Level);

            while (player.Health > 0)
            {
                Console.WriteLine("Ви потрапили в кімнату...");
                eventRoom.Enter(player);

                if (player.Health > 0)
                {
                    Console.WriteLine("Продовжуємо подорож...\n");
                    Thread.Sleep(2000);
                }
            }

        }
    }
}